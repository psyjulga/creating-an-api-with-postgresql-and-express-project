// import request from 'supertest'
// import app from '../server'
// import { Server } from 'http'
// import clearDatabase from '../util/clearDatabase'

// const server: Server = app.listen(() => {
// 	console.log('test server starting')
// })

// describe('Order Handler', () => {
// 	afterAll(async () => {
// 		await clearDatabase(
// 			'DELETE FROM orders_products WHERE quantity IS NOT NULL'
// 		)
// 		await clearDatabase('DELETE FROM products WHERE product_id IS NOT NULL')
// 		await clearDatabase('DELETE FROM orders WHERE order_id IS NOT NULL')
// 		await clearDatabase('DELETE FROM users WHERE user_id IS NOT NULL')
// 		await server.close()
// 	})

// 	test('POST orders/ calls create() and returns 200', async () => {
// 		// when adding a new order we need to give it a user_id,
// 		// so we first create a user whose id will be autogenerated to 1
// 		const userRes = await request(server).post('/users/').send({
// 			first_name: 'Order Handler',
// 			last_name: 'Doe',
// 			password_digest: 'handler-test-password',
// 		})

// 		const orderRes = await request(server).post('/orders/').send({
// 			status: 'active',
// 			user_id: '1',
// 		})
// 		expect(orderRes.status).toBe(200)
// 	})

// 	test('GET /orders/ calls index() and returns 200', async () => {
// 		const res = await request(server).get('/orders/')
// 		expect(res.status).toBe(200)
// 	})
// 	test('GET /orders/:id calls show() and returns 200', async () => {
// 		const res = await request(server).get('/orders/1')
// 		expect(res.status).toBe(200)
// 	})
// 	test('GET /orders/:id/users calls showOrderByUser() and returns 200', async () => {
// 		const res = await request(server).get('/orders/1/users')
// 		expect(res.status).toBe(200)
// 	})
// 	test('POST orders/:id/products calls addProductToOrder() and returns 200', async () => {
// 		// to make sure the database is empty
// 		await clearDatabase('DELETE FROM products WHERE product_id IS NOT NULL')
// 		// to add a product to an existing order we need to create a product first
// 		// because we need to pass its id which will be autogenerated to 1
// 		const productRes = await request(server)
// 			.post('/products/')
// 			.send({ name: 'order-route-test-product', price: 250 })

// 		const orderRes = await request(server).post('/orders/1/products').send({
// 			quantity: 5,
// 			product_id: 1,
// 		})
// 		expect(orderRes.status).toBe(200)
// 	})
// })
